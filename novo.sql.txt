-- Tabela Clientes
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    tel VARCHAR(15),
    endereco VARCHAR(255)
);

-- Tabela Categorias
CREATE TABLE Categorias (
    id_categoria INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    desc_categoria TEXT,
    id_categoria_pai INT,
    FOREIGN KEY (id_categoria_pai) REFERENCES Categorias(id_categoria)
);

-- Tabela Produtos
CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    desc_produto TEXT,
    preco DECIMAL(10, 2) NOT NULL,
    id_categoria INT NOT NULL,
    imagem_url VARCHAR(255),
    FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria)
);

-- Tabela Estoque
CREATE TABLE Estoque (
    id_produto INT,
    quantidade INT DEFAULT 0,
    PRIMARY KEY (id_produto),
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
);

-- Tabela Pedidos
CREATE TABLE Pedidos (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT NOT NULL,
    data_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) CHECK (status IN ('Pendente', 'Pago', 'Enviado', 'Entregue', 'Cancelado')),
    total DECIMAL(12, 2),
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente)
);

-- Tabela Itens_Pedido
CREATE TABLE Itens_Pedido (
    id_item INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT NOT NULL,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES Pedidos(id_pedido),
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
);

-- Tabela Pagamentos
CREATE TABLE Pagamentos (
    id_pagamento INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT NOT NULL,
    data_pagamento TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    valor DECIMAL(12, 2) NOT NULL,
    metodo_pagamento VARCHAR(50) CHECK (metodo_pagamento IN ('Cartão de Crédito', 'Boleto', 'PIX', 'Transferência')),
    status_pagamento VARCHAR(50) CHECK (status_pagamento IN ('Pendente', 'Confirmado', 'Falha')),
    FOREIGN KEY (id_pedido) REFERENCES Pedidos(id_pedido)
);
